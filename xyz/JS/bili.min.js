import { Crypto, jinja2, _ } from 'assets://js/lib/cat.js';import {config as def_conf} from "./bili_ext.js";import {config as loc_conf} from "http://127.0.0.1:9978/file/tvbox/%E9%85%8D%E7%BD%AE_Bili%E6%BA%90.js";let siteKey = '';let siteType = 0;let config = {cookie:loc_conf.cookie,searchable:loc_conf.搜索功能,homeSwitch:loc_conf.显示推荐页,	diyhome:loc_conf.自定义推荐页,	homeName:loc_conf.推荐页内容,t_home:loc_conf.显示首页,t_popular:loc_conf.显示热门,t_ranking:loc_conf.显示排行榜,t_precious:loc_conf.显示入站必刷,t_resource:loc_conf.显示收藏,t_toview:loc_conf.显示稍后再看,t_history:loc_conf.显示历史记录,ratio:loc_conf.视图比例,type_name:null,type_id:null,filter:null};if(loc_conf.自定义分类 != 1) {config.type_name=def_conf.type_name,config.type_id=def_conf.type_id,config.filter=def_conf.filter}else {config.type_name=loc_conf.分类名,config.type_id=loc_conf.分类id,config.filter=loc_conf.筛选};let cookie =config.cookie;let login = '';let vip = false;let extendObj = {};let bili_jct = '';let userID='';let resourceListID=[];let resourceCount=[];let vod_audio_id = {30280: 192000,30232: 132000,30216: 64000,};let vod_codec = {13: 'AV1',12: 'HEVC',7: 'AVC',};const UA = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36';async function request(reqUrl, ua, buffer) {let res = await req(reqUrl, {method: 'get',headers: ua ? ua : { 'User-Agent': UA },timeout: 60000,buffer: buffer ? 1 : 0,});return res.content;}async function post(reqUrl, postData, ua, posttype) {let res = await req(reqUrl, {method: 'post',headers: ua ? ua : { 'User-Agent': UA },data: postData,timeout: 60000,postType: posttype,});return res.content;}function getHeaders() {const headers = {'User-Agent': UA,};if (!_.isEmpty(cookie)) {headers.cookie = cookie;}return headers;}async function getCookie() {let result = await req('https://www.bilibili.com', {method: 'get',headers: { 'User-Agent': UA },timeout: 60000,});const setCookieHeaders = result.headers['set-cookie'];cookie = setCookieHeaders.map((kk) => kk.split(';')[0] + ';').join('');}async function init(cfg) {siteKey = cfg.skey;siteType = cfg.stype;const btname = config.type_name;let btid = config.type_id;if(cookie.startsWith('http')) cookie = await request(cookie);const cookies = cookie.split(';');cookies.forEach(cookie => {if (cookie.includes('bili_jct')) {bili_jct = cookie.split('=')[1];}else if(cookie.split('=')[0]=='DedeUserID'){userID = cookie.split('=')[1];}});if (_.isEmpty(cookie)) await getCookie();let result = JSON.parse(await request('https://api.bilibili.com/x/web-interface/nav', getHeaders()));login = result.data.isLogin;vip = result.data.vipStatus;const newarr = [];const sc = {type_name: "🧸首页推荐",type_id: "首页",land: 1,ratio: config.ratio,};if(config.t_home==1){newarr.push(sc);}const pc = {type_name: "🔥热门视频",type_id: "热门",land: 1,ratio: config.ratio,};if(config.t_popular==1){newarr.push(pc);}const rc = {type_name: "📶排行榜",type_id: "排行榜",land: 1,ratio: config.ratio,};if(config.t_ranking==1){newarr.push(rc);}const pp = {type_name: "🤳入站必刷",type_id: "入站必刷",land: 1,ratio: config.ratio,};if(config.t_precious==1){newarr.push(pp);};const ext_tname = btname.split('#');const ext_tid = btid.split('#');	let cnt = Math.min(ext_tname.length,ext_tid.length);for(let i = 0; i < cnt; i++) {const c = {type_name: ext_tname[i],type_id: ext_tid[i],land: 1,ratio: config.ratio,};newarr.push(c);};if (!_.isEmpty(userID)) {const scj = {type_name: "⭐收藏",type_id: "收藏",land: 1,ratio: config.ratio,};if(config.t_resource==1){newarr.push(scj);};const resourceListUrl='https://api.bilibili.com/x/v3/fav/folder/created/list-all?up_mid='+userID;const resourceList=JSON.parse(await request(resourceListUrl,getHeaders())).data.list;for(const ff of resourceList){resourceListID.push(ff.id);resourceCount.push(ff.media_count);};};const sh = {type_name: "⌛稍后再看",type_id: "稍后再看",land: 1,ratio: config.ratio,};if(config.t_toview==1){newarr.push(sh);};if (!_.isEmpty(bili_jct)) {const hc = {type_name: "📝历史记录",type_id: "历史记录",land: 1,ratio: config.ratio,};if(config.t_history==1){newarr.push(hc);}};extendObj = {classes: newarr,filter: config.filter,};}function home(filter) {try {const jSONObject = {class: extendObj.classes,};if (filter) {jSONObject.filters = extendObj.filter;}return JSON.stringify(jSONObject);} catch (e) {return '';}}async function homeVod() {if(config.homeSwitch==1){try {const url1 = 'https://api.bilibili.com/x/web-interface/index/top/rcmd?ps=14&fresh_idx=1&fresh_idx_1h=1';const url2 = 'https://api.bilibili.com/x/web-interface/search/type?search_type=video&keyword=' + config.homeName;const list = [];if(config.diyhome!=1){const response = await request(url1, getHeaders());const responseData = JSON.parse(response);const vods = responseData.data.item;for (const item of vods) {const vod = {};let imageUrl = item.pic;if (imageUrl.startsWith('//')) {imageUrl = 'https:' + imageUrl;}let cd = turnHMS(item.duration);vod.vod_id = item.bvid;vod.vod_name = removeTags(item.title);vod.vod_pic = imageUrl;vod.vod_remarks = cd;vod.style = {type: 'rect',ratio: config.ratio,},list.push(vod);}const result = { list: list };return JSON.stringify(result);}else{const response = await request(url2, getHeaders());const responseData = JSON.parse(response);const vods = responseData.data.result;for (const it of vods) {const vod = {};let imageUrl = it.pic;if (imageUrl.startsWith('//')) {imageUrl = 'https:' + imageUrl;}let cd = turnHMS(it.duration);vod.vod_id = it.bvid;vod.vod_name = removeTags(it.title);vod.vod_pic = imageUrl;vod.vod_remarks = cd;vod.style = {type: 'rect',ratio: config.ratio,},list.push(vod);}const result = { list: list };return JSON.stringify(result);}} catch (e) { }}else{return null;}}async function category(tid, page, filter, ext) {if (page < 1) page = 1;try {if (Object.keys(ext).length > 0 && ext.hasOwnProperty('tid') && ext['tid'].length > 0) {tid = ext['tid'];}let url = '';url = `https://api.bilibili.com/x/web-interface/search/type?search_type=video&keyword=${encodeURIComponent(tid)}`;if (Object.keys(ext).length > 0) {for (const k in ext) {if (k == 'tid') {continue;}url += `&${encodeURIComponent(k)}=${encodeURIComponent(ext[k])}`;}}url += `&page=${encodeURIComponent(page)}`;if (tid == "首页") {url = "https://api.bilibili.com/x/web-interface/index/top/rcmd?ps=14&fresh_idx=" + page + "&fresh_idx_1h=" + page;} else if (tid == "历史记录") {url = "https://api.bilibili.com/x/v2/history?pn=" + page;} else if (tid == "热门"){url = "https://api.bilibili.com/x/web-interface/popular?pn="+page;} else if (tid == "排行榜"){url = "https://api.bilibili.com/x/web-interface/ranking/v2";} else if (tid == "入站必刷"){url = "https://api.bilibili.com/x/web-interface/popular/precious";} else if(tid == "收藏"){url = "https://api.bilibili.com/x/v3/fav/resource/list?media_id="+resourceListID[page-1]+"&ps="+resourceCount[page-1];} else if(tid == "稍后再看"){url ="https://api.bilibili.com/x/v2/history/toview";}const data = JSON.parse(await request(url, getHeaders())).data;let items = data.result;if (tid == "首页") {items = data.item;} else if (tid == "历史记录") {items = data;} else if (tid == "热门" || tid== "排行榜" || tid== "入站必刷" || tid== "稍后再看"){items = data.list;}else if (tid == "收藏"){items = data.medias;}const videos = [];for (const item of items) {const video = {};let pic = item.pic;if (tid == "收藏"){pic = item.cover;}if (pic.startsWith('//')) {pic = 'https:' + pic;}let cd = turnHMS(item.duration);if (tid == "收藏"){const title= data.info.title;const time= turnYMD(item.fav_time);video.vod_remarks = title+': '+time;}else{video.vod_remarks = cd;}video.vod_id = item.bvid;video.vod_name = removeTags(item.title);video.vod_pic = pic;video.style = {type: 'rect',ratio: config.ratio,},videos.push(video);}if(tid== "排行榜" || tid== "入站必刷" || tid == "稍后再看"){const result = {page: page,pagecount: data.numPages ?? page,limit: videos.length,total: videos.length * page,list: videos,};return JSON.stringify(result);}else{const result = {page: page,pagecount: data.numPages ?? (page + 1),limit: videos.length,total: videos.length * (page + 1),list: videos,};return JSON.stringify(result);};} catch (e) { };return null;}async function detail(ids) {try {const bvid = ids;const detailUrl = `https://api.bilibili.com/x/web-interface/view?bvid=${bvid}`;const detailData = JSON.parse(await request(detailUrl, getHeaders())).data;if (!_.isEmpty(bili_jct)) {const historyReport = 'https://api.bilibili.com/x/v2/history/report';let dataPost = {aid: detailData.aid,cid: detailData.cid,csrf: bili_jct,};await post(historyReport, dataPost, getHeaders(), 'form');}let cd = turnHMS(detailData.duration);let view=turnNum(detailData.stat.view);let like=turnNum(detailData.stat.like);let coin=turnNum(detailData.stat.coin);let favorite=turnNum(detailData.stat.favorite);let share=turnNum(detailData.stat.share);let reply=turnNum(detailData.stat.reply);let danmaku=turnNum(detailData.stat.danmaku);const aid = detailData.aid;const cid = detailData.cid;const mid = detailData.owner.mid;const ownerUrl='https://api.bilibili.com/x/relation/stat?vmid='+mid+'&jsonp=jsonp';const follower=JSON.parse(await request(ownerUrl, getHeaders())).data.follower;const onlineUrl='https://api.bilibili.com/x/player/online/total?aid='+aid+'&cid='+cid;const online=JSON.parse(await request(onlineUrl, getHeaders())).data.total;const video = {vod_id: bvid,vod_name: detailData.title,vod_pic: detailData.pic,type_name: detailData.tname,vod_year: new Date(detailData.pubdate * 1000).getFullYear(),vod_area: '',vod_remarks:'总计'+view+'次播放,'+danmaku+'条弹幕,'+online+'人正在看',vod_actor: '',vod_director: detailData.owner.name+'&nbsp &nbsp '+'粉丝数：'+turnNum(follower),vod_content: '点赞:'+like+'-投币:'+coin+'-收藏:'+favorite+'-转发:'+share+'\n'+detailData.desc,};const playurldata = 'https://api.bilibili.com/x/player/playurl?avid=' + aid + '&cid=' + cid + '&qn=127&fnval=4048&fourk=1';const playurldatas = JSON.parse(await request(playurldata, getHeaders()));const playurldatalist = playurldatas.data;const accept_quality = playurldatalist.accept_quality;const accept_description = playurldatalist.accept_description;const qualitylist = [];const descriptionList = [];for (let i = 0; i < accept_quality.length; i++) {if (!vip) {if (!login) {if (accept_quality[i] > 32) continue;} else {if (accept_quality[i] > 80) continue;}}descriptionList.push(base64Encode(accept_description[i]));qualitylist.push(accept_quality[i]);}let treeMap = {};const jSONArray = detailData.pages;let playList = [];for (let j = 0; j < jSONArray.length; j++) {const jSONObject6 = jSONArray[j];const cid = jSONObject6.cid;const part=jSONObject6.part.replace('#', '﹟').replace('$', '﹩');const playUrl = part + '$' + aid + '+' + cid + '+' + qualitylist.join(':') + '+' + descriptionList.join(':');playList.push(playUrl);}treeMap['DASH线路'] = playList.join('#');treeMap['MP4线路'] = playList.join('#');const relatedUrl = 'https://api.bilibili.com/x/web-interface/archive/related?bvid=' + bvid;const relatedData = JSON.parse(await request(relatedUrl, getHeaders())).data;playList = [];for (let j = 0; j < relatedData.length; j++) {const jSONObject6 = relatedData[j];const cid = jSONObject6.cid;const title = jSONObject6.title;const aaid = jSONObject6.aid;const playUrl = title + '$' + aaid + '+' + cid + '+' + qualitylist.join(':') + '+' + descriptionList.join(':');playList.push(playUrl);}treeMap['相关推荐'] = playList.join('#');video.vod_play_from = Object.keys(treeMap).join("$$$");video.vod_play_url = Object.values(treeMap).join("$$$");const list = [video];const result = { list };return JSON.stringify(result);} catch (e) { }return null;}async function play(flag, id, flags) {try {const playHeaders = { Referer: 'https://www.bilibili.com', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36' };const ids = id.split('+');const aid = ids[0];const cid = ids[1];const qualityIds = ids[2].split(':');const qualityName = ids[3].split(':');const dan = 'https://api.bilibili.com/x/v1/dm/list.so?oid=' + cid;if (flag == 'DASH线路' || flag == '相关推荐') {const js2Base = await js2Proxy(true, siteType, siteKey, 'dash/', {});let urls = [];for (let i = 0; i < qualityIds.length; i++) {urls.push(base64Decode(qualityName[i]), js2Base + base64Encode(aid + '+' + cid + '+' + qualityIds[i]));}return JSON.stringify({parse: 0,url: urls,danmaku: dan,header: playHeaders,});} else if (flag == 'MP4线路') {let urls = [];for (let i = 0; i < qualityIds.length; i++) {const url = `https://api.bilibili.com/x/player/playurl?avid=${aid}&cid=${cid}&qn=${qualityIds[i]}&fourk=1`;const resp = JSON.parse(await request(url, getHeaders()));const data = resp.data;if (data.quality != qualityIds[i]) continue;let durl = data.durl[0].url;urls.push(base64Decode(qualityName[i]), durl);}return JSON.stringify({parse: 0,url: urls,danmaku: dan,header: playHeaders,});} else {let urls = [];let audios = [];for (let i = 0; i < qualityIds.length; i++) {const url = `https://api.bilibili.com/x/player/playurl?avid=${aid}&cid=${cid}&qn=${qualityIds[i]}&fnval=4048&fourk=1`;let resp = JSON.parse(await request(url, getHeaders()));const dash = resp.data.dash;const video = dash.video;const audio = dash.audio;for (let j = 0; j < video.length; j++) {const dashjson = video[j];if (dashjson.id == qualityIds[i]) {for (const key in vod_codec) {if (dashjson.codecid == key) {urls.push(base64Decode(qualityName[i]) + ' ' + vod_codec[key], dashjson.baseUrl);}}}}if (audios.length == 0) {for (let j = 0; j < audio.length; j++) {const dashjson = audio[j];for (const key in vod_audio_id) {if (dashjson.id == key) {audios.push({title: _.floor(parseInt(vod_audio_id[key]) / 1024) + 'Kbps',bit: vod_audio_id[key],url: dashjson.baseUrl,});}}}audios = _.sortBy(audios, 'bit');}}return JSON.stringify({parse: 0,url: urls,extra: {audio: audios,},header: playHeaders,});}} catch (e) { }return null;}async function search(key, quick, pg) {if(config.searchable==1){let page = pg || 1;if (page == 0) page = 1;try {const ext = {duration: '0',};let resp = JSON.parse(await category(key, page, true, ext));const catVideos = resp.list;const pageCount = resp.pagecount;const videos = [];for (let i = 0; i < catVideos.length; ++i) {videos.push(catVideos[i]);}const result = {page: page,pagecount: pageCount,land: 1,ratio: config.ratio,list: videos,};return JSON.stringify(result);} catch (e) { }return null;}else{return null;}}async function proxy(segments, headers) {let what = segments[0];let url = base64Decode(segments[1]);if (what == 'dash') {const ids = url.split('+');const aid = ids[0];const cid = ids[1];const str5 = ids[2];const urls = `https://api.bilibili.com/x/player/playurl?avid=${aid}&cid=${cid}&qn=${str5}&fnval=4048&fourk=1`;let videoList = '';let audioList = '';let resp = JSON.parse(await request(urls, getHeaders()));const dash = resp.data.dash;const video = dash.video;const audio = dash.audio;for (let i = 0; i < video.length; i++) {const dashjson = video[i];if (dashjson.id == str5) {videoList += getDashMedia(dashjson);}}for (let i = 0; i < audio.length; i++) {const ajson = audio[i];for (const key in vod_audio_id) {if (ajson.id == key) {audioList += getDashMedia(ajson);}}}let mpd = getDash(resp, videoList, audioList);return JSON.stringify({code: 200,content: mpd,headers: {'Content-Type': 'application/dash+xml',},});}return JSON.stringify({code: 500,content: '',});}function getDashMedia(dash) {try {let qnid = dash.id;const codecid = dash.codecid;const media_codecs = dash.codecs;const media_bandwidth = dash.bandwidth;const media_startWithSAP = dash.startWithSap;const media_mimeType = dash.mimeType;const media_BaseURL = dash.baseUrl.replace(/&/g, '&amp;');const media_SegmentBase_indexRange = dash.SegmentBase.indexRange;const media_SegmentBase_Initialization = dash.SegmentBase.Initialization;const mediaType = media_mimeType.split('/')[0];let media_type_params = '';if (mediaType == 'video') {const media_frameRate = dash.frameRate;const media_sar = dash.sar;const media_width = dash.width;const media_height = dash.height;media_type_params = `height='${media_height}' width='${media_width}' frameRate='${media_frameRate}' sar='${media_sar}'`;} else if (mediaType == 'audio') {for (const key in vod_audio_id) {if (qnid == key) {const audioSamplingRate = vod_audio_id[key];media_type_params = `numChannels='2' sampleRate='${audioSamplingRate}'`;}}}qnid += '_' + codecid;return `<AdaptationSet lang="chi"><ContentComponent contentType="${mediaType}"/><Representation id="${qnid}" bandwidth="${media_bandwidth}" codecs="${media_codecs}" mimeType="${media_mimeType}" ${media_type_params} startWithSAP="${media_startWithSAP}"><BaseURL>${media_BaseURL}</BaseURL><SegmentBase indexRange="${media_SegmentBase_indexRange}"><Initialization range="${media_SegmentBase_Initialization}"/></SegmentBase></Representation></AdaptationSet>`;} catch (e) {}}function getDash(ja, videoList, audioList) {const duration = ja.data.dash.duration;const minBufferTime = ja.data.dash.minBufferTime;return `<MPD xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:mpeg:dash:schema:mpd:2011" xsi:schemaLocation="urn:mpeg:dash:schema:mpd:2011 DASH-MPD.xsd" type="static" mediaPresentationDuration="PT${duration}S" minBufferTime="PT${minBufferTime}S" profiles="urn:mpeg:dash:profile:isoff-on-demand:2011"><Period duration="PT${duration}S" start="PT0S">${videoList}${audioList}</Period></MPD>`;}function base64Encode(text) {return Crypto.enc.Base64.stringify(Crypto.enc.Utf8.parse(text));}function base64Decode(text) {return Crypto.enc.Utf8.stringify(Crypto.enc.Base64.parse(text));}function removeTags(input) {return input.replace(/<[^>]*>/g, '');}function turnYMD(time){var d=new Date(time*1000);var y= d.getFullYear()-2000 + '-';var m= (d.getMonth() + 1 < 10 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1) + '-';var d= d.getDate() < 10 ? '0' + (d.getDate()) : d.getDate();var s=y+m+d;return s;}function turnNum(num){let a='';if(num>=10000){num=Math.round(num/10000*10)/10;a=num+'万';}else if(num>=1000&&num<10000){num=Math.round(num/1000*10)/10;a=num+'千';}else{a=num;}return a; }function turnHMS(numberSec) {let totalSeconds = '';try {var timeParts = numberSec.split(":");var min = parseInt(timeParts[0]);var sec = parseInt(timeParts[1]);totalSeconds = min * 60 + sec;} catch (e) {totalSeconds = parseInt(numberSec);}if (isNaN(totalSeconds)) {return '无效输入';}if (totalSeconds >= 3600) {const hours = Math.floor(totalSeconds / 3600);const remainingSecondsAfterHours = totalSeconds % 3600;const minutes = Math.floor(remainingSecondsAfterHours / 60);const seconds = remainingSecondsAfterHours % 60;return `${hours}小时${minutes}分${seconds}秒`;} else {const minutes = Math.floor(totalSeconds / 60);const seconds = totalSeconds % 60;return `${minutes}分${seconds}秒`;}}export function __jsEvalReturn() {return {init: init,home: home,homeVod: homeVod,category: category,detail: detail,play: play,proxy: proxy,search: search,};}